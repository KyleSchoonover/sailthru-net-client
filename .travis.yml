language: csharp
solution: Sailthru/Sailthru.sln

jobs:
  include:
    - dotnet: 2.1.810
      env: DOTNET=2.1 TEST_FRAMEWORK=netcoreapp2.1
    - dotnet: 3.1.402
      env: DOTNET=3.1 TEST_FRAMEWORK=netcoreapp3.1
    - mono: latest
      env: DOTNET=mono TEST_FRAMEWORK=net452
  allow_failures:
    - dotnet: 2.1.810
    - dotnet: 3.1.402
  fast_finish: true

install:
  - msbuild /t:Restore /p:TestFramework=${TEST_FRAMEWORK} Sailthru/Sailthru.sln
  - if [ "$DOTNET" = "mono" ]; then nuget install NUnit.Console -Version 3.12.0-beta1 -OutputDirectory testrunner; fi


script:
  - msbuild /p:Configuration=Release /p:TestFramework=${TEST_FRAMEWORK} Sailthru/Sailthru.sln
  - if [ "$DOTNET" = "mono" ]; then mono ./testrunner/NUnit.ConsoleRunner.3.12.0-beta1/tools/nunit3-console.exe ./Sailthru/Sailthru.Tests/bin/Release/net452/Sailthru.Tests.dll; fi
  - if [ "$DOTNET" != "mono" ]; then dotnet test --no-build -p:TestFramework=${TEST_FRAMEWORK} -c Release Sailthru/Sailthru.sln; fi

before_deploy:
  - msbuild /t:Pack /p:Configuration=Release Sailthru/Sailthru/Sailthru.csproj
  - nuget setApiKey $NUGET_API_KEY -Verbosity quiet >/dev/null 2>&1

deploy:
  skip_cleanup: true
  provider: script
  on:
    tags: true
    condition: $DOTNET = mono
  script: nuget push Sailthru/Sailthru/bin/Release/Sailthru.Client.*.nupkg -Source nuget.org
